// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int                   @id @default(autoincrement())
  email        String                @unique
  name         String?
  password     String
  orders       Order[]
  shoppingCartProducts ShoppingCartProduct[]
  countryId    Int
  country      Country               @relation(fields: [countryId], references: [id])
}

model Country {
  id    Int    @id @default(autoincrement())
  name  String
  code  String
  users User[]
}

model VatRate {
  id   Int     @id @default(autoincrement())
  rate Decimal @db.Decimal(12, 4)

  products Product[]
}

enum OrderStatus {
  PENDING
  CONFIRMED
  DELIVERED
  CANCELLED
}

model Order {
  id         Int         @id @default(autoincrement())
  status     OrderStatus
  total      Float
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  totalPrice Decimal     @db.Decimal(12, 4)
  price      Decimal     @db.Decimal(12, 4)
  vat        Decimal     @db.Decimal(12, 4)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderlines Orderline[]
}

model Orderline {
  id         Int     @id @default(autoincrement())
  quantity   Int
  orderId    Int
  order      Order   @relation(fields: [orderId], references: [id])
  totalPrice Decimal @db.Decimal(12, 4)
  price      Decimal @db.Decimal(12, 4)
  vat        Decimal @db.Decimal(12, 4)
  productId  Int
  product    Product @relation(fields: [productId], references: [id])
}

model Product {
  id                   Int                   @id @default(autoincrement())
  name                 String
  description          String
  price                Decimal               @db.Decimal(12, 4)
  stock                Int                   @default(0)
  totalStock           Int                   @default(0)
  orderlines           Orderline[]
  shoppingCartProducts ShoppingCartProduct[]
  vatRateId            Int
  vatRate              VatRate               @relation(fields: [vatRateId], references: [id])
}

model ShoppingCartProduct {
  id     Int  @id @default(autoincrement())
  userId Int
  user   User @relation(fields: [userId], references: [id])

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  quantity Int

  @@unique([userId, productId])
}
